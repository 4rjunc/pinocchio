name: Main

on:
  push:
    branches: [main]
  pull_request:

env:
  CACHE: true

jobs:
  filter:
    name: Filter crates
    runs-on: ubuntu-latest
    outputs:
      members: ${{ steps.creates.outputs.members }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Parse workspace
        run: pnpm tsx ./scripts/setup/members.mts

  process:
    name: Process crate
    needs: filter
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.filter.outputs.members) }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v4

#jobs:
#  lint:
#    name: Lint
#    runs-on: ubuntu-latest
#    steps:
#      - name: Git checkout
#        uses: actions/checkout@v4
#      - name: Install components
#        uses: dtolnay/rust-toolchain@master
#        with:
#          components: clippy, rustfmt
#          toolchain: ${{ env.RUST_VERSION }}
#      - name: Formatting
#        run: cargo fmt --all --check
#      - name: Clippy
#        run: cargo clippy --all-targets --all-features --no-deps
#
#  build:
#    name: Build
#    needs: lint
#    runs-on: ubuntu-latest
#    steps:
#      - name: Git checkout
#        uses: actions/checkout@v4
#      - name: Install Solana
#        uses: nifty-oss/actions/install-solana@v1
#        with:
#          version: ${{ env.SOLANA_VERSION }}
#          cache: true
#      - name: Cache cargo dependencies
#        uses: actions/cache@v4
#        with:
#          path: ${{ env.CARGO_CACHE }}
#          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
#          restore-keys: ${{ runner.os }}-cargo
#      - name: Build
#        run: cargo build --all-targets --all-features
#
#  test:
#    name: Test
#    needs: lint
#    runs-on: ubuntu-latest
#    steps:
#      - name: Git checkout
#        uses: actions/checkout@v4
#      - name: Cache cargo dependencies
#        uses: actions/cache@v4
#        with:
#          path: ${{ env.CARGO_CACHE }}
#          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
#          restore-keys: ${{ runner.os }}-cargo
#      - name: Build
#        run: cargo test --all-features
